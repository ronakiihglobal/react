{"version":3,"sources":["MiniDrawer.js","App.js","serviceWorker.js","index.js"],"names":["Users","lazy","__webpack_require__","e","then","bind","Details","Index","react_default","a","createElement","About","MiniDrawer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","handleDrawerOpen","setState","handleDrawerClose","_classNames3","_classNames4","_this$props","classes","theme","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","drawerOpen","drawerClose","paper","toolbar","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","react_router_dom","to","concat","process","ListItem_default","button","ListItemIcon_default","Home_default","ListItemText_default","primary","Group_default","Info_default","content","react_router","exact","path","component","React","Component","withStyles","display","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","spacing","unit","breakpoints","up","objectSpread","alignItems","justifyContent","padding","mixins","flexGrow","withTheme","App","sideBarStatus","handleClick","assertThisInitialized","console","log","basename","react","fallback","src_MiniDrawer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d96c5243.chunk.js","sourcesContent":["import React, { lazy } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nimport { Route, Link } from \"react-router-dom\";\n\n\n//import Users from './User.js'\nconst Users = lazy(() => import('./User.js'));\nconst Details = lazy(() => import('./Details.js'));\n\nconst drawerWidth = 240;\n\n\nfunction Index() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing.unit * 7 + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9 + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass MiniDrawer extends React.Component {\n\n  constructor(props){\n    super(props)\n  }\n\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: this.state.open,\n          })}\n        >\n          <Toolbar disableGutters={!this.state.open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, {\n                [classes.hide]: this.state.open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              React\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={classNames(classes.drawer, {\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open,\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerOpen]: this.state.open,\n              [classes.drawerClose]: !this.state.open,\n            }),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n\n            <Link to={`${process.env.PUBLIC_URL}/`}>\n              <ListItem button>\n                    <ListItemIcon><HomeIcon /></ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n              </ListItem>\n            </Link>\n\n            <Link to={`/users`}>\n              <ListItem button>\n                    <ListItemIcon><GroupIcon /></ListItemIcon>\n                    <ListItemText primary=\"Users\" />\n              </ListItem>\n            </Link>\n\n            <Link to={`${process.env.PUBLIC_URL}/about`}>\n              <ListItem button>\n                    <ListItemIcon><InfoIcon /></ListItemIcon>\n                    <ListItemText primary=\"About\" />\n              </ListItem>\n            </Link>\n\n          </List>\n\n\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Route exact path={`${process.env.PUBLIC_URL}/`} component={Index} />\n          <Route path={`${process.env.PUBLIC_URL}/about/`} component={About} />\n          <Route exact path={`/users/`} component={Users} />\n          <Route path={`${process.env.PUBLIC_URL}/users/details/:id`} component={Details} />\n        </main>\n      </div>\n    );\n  }\n}\n\nMiniDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);","import React, { Component, Suspense } from 'react';\nimport './App.css';\n\nimport MiniDrawer from './MiniDrawer.js'\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      sideBarStatus: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n\n  handleClick(){\n\n    console.log(\"handleClick\",this.state.sideBarStatus)\n    this.setState({\n      sideBarStatus:!this.state.sideBarStatus\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={'/react'}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <MiniDrawer />\n          </Suspense>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}