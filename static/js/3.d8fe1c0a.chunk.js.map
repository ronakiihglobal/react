{"version":3,"sources":["logo.svg","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Todo.js"],"names":["module","exports","__webpack_require__","p","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","newItem","list","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","defineProperty","e","setItem","stringify","id","Math","random","slice","push","updatedList","filter","item","_this2","react_default","a","createElement","className","style","padding","textAlign","maxWidth","margin","type","placeholder","onChange","updateInput","target","onClick","addItem","disabled","map","deleteItem","Component"],"mappings":"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","file":"static/js/3.d8fe1c0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key);\n\n        // parse the localStorage string and setState\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          // handle empty string\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          style={{\n            padding: 50,\n            textAlign: \"left\",\n            maxWidth: 500,\n            margin: \"auto\"\n          }}\n        >\n          Add an item to the list\n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"Type item here\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <button\n            onClick={() => this.addItem()}\n            disabled={!this.state.newItem.length}\n          >\n            &#43; Add\n          </button>\n          <br /> <br />\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id}>\n                  {item.value}\n                  <button onClick={() => this.deleteItem(item.id)}>\n                    Remove\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"sourceRoot":""}