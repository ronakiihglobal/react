{"version":3,"sources":["PostForm.js"],"names":["PostForm","props","_this","Object","_var_www_html_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_var_www_html_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","handleselectedFile","event","target","files","then","base64","setState","selectedFile","loaded","state","title","description","image","mode","editId","submitButtonText","redirect_","handleSubmit","bind","_var_www_html_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","postId","match","params","editItem","posts","filter","item","id","editPost","updatePost","addPost","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","attr","val","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_router__WEBPACK_IMPORTED_MODULE_8__","to","classes","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_11__","ref","onSubmit","onError","errors","console","log","label","className","textField","value","onChange","e","handleChange","margin","validators","errorMessages","rows","rowsMax","multiline","accept","fileInput","multiple","type","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","variant","color","Component","connect","dispatch","post","arguments","length","undefined","payload","withStyles","theme","table","minWidth","maxHeight","container","display","flexWrap","marginLeft","spacing","unit","marginRight","width","marginBottom","marginTop","dense","menu","root","overflowX","height","actionButton","cursor"],"mappings":"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","file":"static/js/8.a846eb1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\n\n\nconst styles = theme => ({\n  table: {\n    minWidth: 700,\n    maxHeight: 500\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 500,\n  },\n  fileInput:{\n  \tmarginBottom:theme.spacing.unit * 2,\n  \tmarginTop:theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n    height: 500\n  },\n  actionButton:{\n    cursor:\"pointer\"\n  }\n});\n\n\n\nclass PostForm extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      title:'',\n      description:'',\n      image:'',\n      mode: 'create',\n      editId: '',\n      submitButtonText:'Submit',\n      redirect_:false,\n      selectedFile:''\n    };\n\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n\n  componentDidMount(){\n\n    const { postId } = this.props.match.params;\n    if(postId){\n        let editItem = this.props.posts.filter((item) => item.id == postId)[0];\n        this.props.editPost(postId)\n        this.setState({\"mode\":\"update\",\"editId\":editItem.id,\"title\":editItem.title,\"description\":editItem.description})\n    }\n  }\n\n  handleSubmit() {\n\n    \n    if(this.state.mode === \"update\"){\n      this.props.updatePost({\"id\":this.state.editId, \"title\":this.state.title, \"description\": this.state.description, \"file\": this.state.selectedFile })\n    }else{\n      this.props.addPost({\"title\":this.state.title, \"description\": this.state.description, \"file\": this.state.selectedFile })\n    }\n\n    this.saveStateToLocalStorage();\n    this.setState({redirect_:true});\n\n  }\n\n  saveStateToLocalStorage() {\n      localStorage.setItem('posts', JSON.stringify(this.props.posts));\n  }\n\n  handleChange(attr,val) {\n    \n    if(attr === 'description'){\n    \tthis.setState({\n\t      description: val\n\t    })\t\n    }else if(attr === 'title'){\n    \tthis.setState({\n\t      title: val\n\t    })\t\n    }\n\n    \n  }\n\n  getBase64 = (file) => {\n    return new Promise((resolve,reject) => {\n       const reader = new FileReader();\n       reader.onload = () => resolve(reader.result);\n       reader.onerror = error => reject(error);\n       reader.readAsDataURL(file);\n    });\n  }\n\n  handleselectedFile = event => {\n\n    const file = event.target.files[0];\n    this.getBase64(file).then(base64 => {\n      \n      this.setState({\n        selectedFile: base64,\n        loaded: 0,\n      })\n\n    });\n\n    \n  }\n  \n  \n\n  render() {\n\n  \tif (this.state.redirect_ === true) {\n      return <Redirect to='/post' />\n    }\n\n    const { classes } = this.props;\n\n    return(\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => console.log(errors)}\n        >\n        <div>\n        <TextValidator\n          label=\"Title\"\n          className={classes.textField}\n          value={this.state.title}\n          onChange={(e) => { this.handleChange('title',e.target.value)} }\n          margin=\"normal\"\n          validators={['required']} //, 'isEmail'\n          errorMessages={['this field is required', 'email is not valid']}\n\n        />\n        </div>\n\n        <div>\n        <TextValidator\n          label=\"Description\"\n          className={classes.textField}\n          value={this.state.description}\n          onChange={(e) => { this.handleChange('description',e.target.value)} }\n          margin=\"normal\"\n          rows={4}\n          rowsMax={10}\n          multiline={true}\n          validators={['required']}\n          errorMessages={['this field is required']}\n        />\n        </div>\n\n        <div>\n        <input\n\t\t  accept=\"image/*\"\n\t\t  className={classes.fileInput}\n\t\t  id=\"raised-button-file\"\n\t\t  multiple\n\t\t  type=\"file\"\n\t\t  onChange={this.handleselectedFile} \n\t\t/>\n\t\t</div>\n\n        {/*\n        <div>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { this.handleSubmit()} } > { this.state.submitButtonText } </Button>\n        </div>\n      */}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n    </ValidatorForm>\n    </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    editItem: state.editItem,\n    posts: state.posts\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: (post = \"\") => dispatch({ type: 'ADDPOST' , payload:post}),\n    updatePost: (post) => dispatch({ type: 'UPDATEPOST' , payload:post}),\n    editPost: (postId) => dispatch({ type: 'EDITPOST' , payload:postId}),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PostForm));\n//export default withStyles(styles)(PostForm);"],"sourceRoot":""}